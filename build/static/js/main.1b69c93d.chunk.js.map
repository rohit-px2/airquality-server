{"version":3,"sources":["services/aqi.js","services/locator.js","components/Footer.js","components/JumboLocationAndInput.js","components/AQIIndicator.js","components/StatDisplay.js","components/StatsDisplay.js","components/MainPage.js","services/login.js","components/LoginModal.js","services/userCreation.js","components/SignupModal.js","components/Header.js","components/Dashboard.js","App.js","index.js"],"names":["baseUrl","addDashboardUrl","token","location","a","axios","get","country","city","response","data","config","headers","Authorization","post","aqiService","getAQI","setToken","newToken","create","locatorService","getLocation","Footer","className","href","JumboLocationAndInput","setLocation","user","addLocation","useState","inputCity","setInputCity","inputCountry","setInputCountry","appendLocation","Jumbotron","locations","undefined","find","onClick","type","style","fontSize","onSubmit","value","onChange","event","target","placeholder","healthMessages","healthColor","AQIIndicator","aqi","health","setHealth","useEffect","healthColorStyle","backgroundColor","backdropFilter","Card","CardBody","abbreviationsMap","ppm","measurements","StatDisplay","stat","accessKey","Object","keys","v","StatsDisplay","stats","map","idx","MainPage","info","Helmet","credentials","loginService","login","LoginModal","isOpen","toggleModal","setUser","useHistory","username","setUsername","password","setPassword","error","setError","closeModal","Modal","toggle","ModalHeader","ModalBody","preventDefault","then","console","log","window","localStorage","setItem","JSON","stringify","replace","catch","handleLogin","htmlFor","userService","createUser","SignupModal","message","setMessage","setTimeout","status","handleSignup","Header","clearUser","isLoginOpen","setLoginOpen","isSignupOpen","setSignupOpen","toggleLogin","toggleSignup","Dashboard","locationCards","assign","getAqiInfo","App","setInfo","userKey","locatorKey","setLocationAndGetInfo","newLocation","loggedInUserStr","getItem","loggedInUserJSON","parse","storedLocation","clear","path","newLocations","concat","newUser","ReactDOM","render","document","getElementById"],"mappings":"iOACMA,EAAO,YACPC,EAAkB,sBAEpBC,EAAQ,K,4CAcZ,WAAsBC,GAAtB,eAAAC,EAAA,sEACwBC,IAAMC,IAAN,UAAaN,EAAb,YAAwBG,EAASI,QAAjC,YAA4CJ,EAASK,OAD7E,cACOC,EADP,yBAEQA,EAASC,MAFjB,4C,kEAUA,WAAsBP,GAAtB,iBAAAC,EAAA,6DACOO,EAAS,CACdC,QAAS,CAACC,cAAeX,IAF3B,SAIwBG,IAAMS,KAAKb,EAAiBE,EAAUQ,GAJ9D,cAIOF,EAJP,yBAKQA,GALR,4C,sBAQA,IAMeM,EANI,CAClBC,O,4CACAC,SA7BD,SAAkBC,GACjBhB,EAAK,iBAAagB,IA6BlBC,O,6CCrCKnB,EAAU,gB,4CAKhB,4BAAAI,EAAA,sEACwBC,IAAMC,IAAIN,GADlC,cACOS,EADP,yBAEWA,EAASC,MAFpB,4C,sBAKA,IAEeU,EAFQ,CAACC,Y,4CCLT,SAASC,IACvB,OACC,yBAAQC,UAAU,6BAAlB,UACC,oBAAIA,UAAU,yBAAd,iEACA,qBAAIA,UAAU,6BAAd,4BAEC,mBAAGC,KAAK,+BAA+BD,UAAU,uBAAjD,SACI,yB,YCVO,SAASE,EAAT,GAAiF,IAAjDjB,EAAgD,EAAhDA,KAAMD,EAA0C,EAA1CA,QAASmB,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,YAAc,EAC5DC,mBAAS,IADmD,mBACvFC,EADuF,KAC5EC,EAD4E,OAEtDF,mBAAS,IAF6C,mBAEvFG,EAFuF,KAEzEC,EAFyE,KAoB9F,SAASC,IAERN,EADiB,CAACpB,OAAMD,YA+BzB,OACC,eAAC4B,EAAA,EAAD,CAAWZ,UAAU,iCAArB,UAXII,GAbAA,GACEA,EAAKS,gBAEoGC,IAA5FV,EAAKS,UAAUE,MAAK,SAAAnC,GAAQ,OAAIA,EAASK,OAASA,GAAQL,EAASI,UAAYA,KAYhG,wBAAQgB,UAAU,4BAA4BgB,QAASL,EAAgBM,KAAK,SAA5E,8BAKK,KAMN,sBAAKjB,UAAU,wCAAf,UACC,qBAAKA,UAAU,cAAf,SACC,qBAAIkB,MA5CW,CAClBC,SAAU,QA2CgBnB,UAAU,cAAjC,UAAgDf,EAAhD,KAAwDD,OAEzD,uBAAMoC,SApDT,WACCjB,EAAY,CACXlB,KAAMsB,EACNvB,QAASyB,KAiDsBT,UAAU,OAAxC,UACC,sBAAKA,UAAU,WAAf,UACC,qBAAKA,UAAU,MAAf,SACC,uBACCiB,KAAK,OACLI,MAAOd,EACPe,SAAU,SAAAC,GAAK,OAAIf,EAAae,EAAMC,OAAOH,QAC7CI,YAAY,UACZzB,UAAU,wBAGZ,qBAAKA,UAAU,MAAf,SACC,uBACCiB,KAAK,OACLI,MAAOZ,EACPa,SAAU,SAAAC,GAAK,OAAIb,EAAgBa,EAAMC,OAAOH,QAChDI,YAAY,aACZzB,UAAU,4BAIb,qBAAKA,UAAU,uCAAf,SACC,wBAAQiB,KAAK,SAASjB,UAAU,kBAAhC,+B,oBCnFA0B,EAAiB,CACtB,KAAQ,sFACR,kBAAmB,gKACnB,uBAAwB,4HACxB,UAAa,wMACb,iBAAkB,yLAClB,UAAa,+CAYRC,EAAc,CACnB,KATO,UAUP,kBATQ,UAUR,uBATQ,UAUR,UATK,UAUL,iBATQ,UAUR,UATY,WAkBE,SAASC,EAAT,GAA8B,IAAPC,EAAM,EAANA,IAAM,EACfvB,mBAAS,IADM,mBACpCwB,EADoC,KAC5BC,EAD4B,KAe3CC,qBATA,WACY,OAARH,IACKA,GAAO,GAAIE,EAAU,QACrBF,EAAM,IAAMA,GAAO,IAAKE,EAAU,mBAClCF,EAAM,KAAOA,GAAO,IAAKE,EAAU,wBACnCF,EAAM,KAAOA,GAAO,IAAKE,EAAU,aACnCF,EAAM,KAAOA,GAAO,IAAKE,EAAU,kBACnCF,EAAM,KAAKE,EAAU,gBAER,CAACF,IASvB,IAIMI,EAAmB,CACxBC,gBAAiBP,EAAYG,IAI9B,OACC,eAAClB,EAAA,EAAD,CAAWM,MAVY,CACvBiB,eAAgB,aASmBnC,UAAU,yBAA7C,UACC,cAACoC,EAAA,EAAD,CAAMlB,MAAOe,EAAkBjC,UAAU,cAAzC,SACC,eAACqC,EAAA,EAAD,WACC,qBAAIrC,UAAU,wBAAd,kBAA4C6B,KAC5C,oBAAI7B,UAAU,wBAAd,SAAuC8B,SAGzC,mBAAG9B,UAAU,6BAAb,SApBM0B,EAAeI,QC/CxB,IAAMQ,EAAmB,CACxB,GAAM,kBACN,GAAM,QACN,IAAO,iBACP,IAAO,mBACP,KAAQ,sCAAQ,wCAChB,KAAQ,sCAAQ,yCAChB,EAAK,cACL,EAAK,aACL,EAAK,eACL,EAAK,YAGAC,EAAM,OAMNC,EAAe,CACpB,GAAMD,EACN,GAAMA,EACN,IAAOA,EACP,IAAOA,EACP,EAVY,iCAAM,qCAAN,OAWZ,EAVW,QAWX,EAVW,OAWX,EAVY,yCAAW,wCAmBT,SAASE,EAAT,GAA8B,IAARC,EAAO,EAAPA,KACpC,QAAa5B,IAAT4B,GAA+B,OAATA,EAAe,CACxC,IAAMC,EAAYC,OAAOC,KAAKH,GAAM,GAC9BH,EAAMG,EAAKC,GAAWG,EAC5B,OACC,sBAAK9C,UAAU,uCAAf,UACC,oBAAIA,UAAU,cAAd,SAA6BsC,EAAiBK,KAC9C,qBAAI3C,UAAU,cAAd,UAA6BuC,EAAKC,EAAaG,GAAaH,EAAaG,GAAa,SAKxF,OAAO,KCjDM,SAASI,EAAT,GAAgC,IAATC,EAAQ,EAARA,MACrC,YAAclC,IAAVkC,GAAiC,OAAVA,EACnB,KAEQA,EAAMC,KAAI,SAACP,EAAMQ,GAChC,OAAO,cAACT,EAAD,CAAaC,KAAMA,GAAWQ,M,YCIxB,SAASC,EAAT,GAA2D,IAAxCC,EAAuC,EAAvCA,KAAMjD,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,YAC1D,OACC,qCACC,cAACgD,EAAA,EAAD,UACC,kDAAmBD,EAAKnE,KAAxB,aAAiCmE,EAAKpE,aAEvC,sBAAKgB,UAAU,YAAf,UACC,cAACE,EAAD,CACCC,YAAaA,EACbnB,QAASoE,EAAKpE,QACdC,KAAMmE,EAAKnE,KACXmB,KAAMA,EACNC,YAAaA,IAEd,cAACuB,EAAD,CAAcC,IAAKuB,EAAKvB,MACxB,cAACkB,EAAD,CAAcC,MAAOI,EAAKJ,c,4BC/BxBvE,EAAU,a,4CAKhB,WAAqB6E,GAArB,eAAAzE,EAAA,sEACwBC,IAAMS,KAAKd,EAAS6E,GAD5C,cACOpE,EADP,yBAEQA,GAFR,4C,sBAKA,IAGeqE,EAHM,CAACC,M,oDCGP,SAASC,EAAT,GAAqD,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,QAAU,GACpDC,cACkBvD,mBAAS,KAFyB,mBAE3DwD,EAF2D,KAEjDC,EAFiD,OAGlCzD,mBAAS,IAHyB,mBAG3D0D,EAH2D,KAGjDC,EAHiD,OAIxC3D,mBAAS,MAJ+B,mBAI3D4D,EAJ2D,KAIpDC,EAJoD,KA0BlE,SAASC,IALRL,EAAY,IACZE,EAAY,IACZE,EAAS,MAKTR,IAGD,OACC,eAACU,EAAA,EAAD,CAAOX,OAAQA,EAAQY,OAAQF,EAA/B,UACC,cAACG,EAAA,EAAD,CAAaD,OAAQF,EAArB,mBACA,mBAAGpE,UAAU,0BAAb,SAAwCkE,GAAgB,KACxD,cAACM,EAAA,EAAD,UACC,uBAAMpD,SAAU,SAAAG,GAAK,OA9BxB,SAAqBA,GACpBA,EAAMkD,iBACNlB,EACEC,MAAM,CAACM,WAAUE,aACjBU,MAAK,SAAAxF,GACLyF,QAAQC,IAAI1F,EAASC,MACrB0F,OAAOC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAU/F,EAASC,OACrEyE,EAAQ1E,EAASC,MACjB0F,OAAOjG,SAASsG,QAAQ,QAExBC,OAAM,SAAAjB,GACNC,EAASD,EAAMhF,SAASC,KAAK+E,UAmBJkB,CAAY7D,IAArC,UACC,uBAAO8D,QAAQ,WAAf,sBACA,uBACCrF,UAAU,eACVsB,SAAU,SAAAC,GAAK,OAAIwC,EAAYxC,EAAMC,OAAOH,QAC5CJ,KAAK,OACLI,MAAOyC,EACPrC,YAAY,aACb,uBACA,uBAAO4D,QAAQ,WAAf,sBACA,uBACCrF,UAAU,eACVsB,SAAU,SAAAC,GAAK,OAAI0C,EAAY1C,EAAMC,OAAOH,QAC5CJ,KAAK,WACLI,MAAO2C,EACPvC,YAAY,aACb,uBACA,qBAAKzB,UAAU,gCAAf,SACC,wBAAQA,UAAU,0BAA0BiB,KAAK,SAAjD,6BCnEN,IAAMxC,EAAU,a,4CAKhB,WAA0B6E,GAA1B,eAAAzE,EAAA,sEACwBC,IAAMS,KAAKd,EAAS6E,GAD5C,cACOpE,EADP,yBAEQA,GAFR,4C,sBAKA,IAEeoG,EAFK,CAAEC,W,6CCIP,SAASC,EAAT,GAAyD,IAAnC9B,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,YAA0B,KAAb4B,WAC3C1B,cACgBvD,mBAAS,KAF+B,mBAE/DmF,EAF+D,KAEtDC,EAFsD,OAGtCpF,mBAAS,IAH6B,mBAG/DwD,EAH+D,KAGrDC,EAHqD,OAItCzD,mBAAS,IAJ6B,mBAI/D0D,EAJ+D,KAIrDC,EAJqD,OAK5C3D,mBAAS,IALmC,mBAK/D4D,EAL+D,KAKxDC,EALwD,KAsCtE,SAASC,IATRL,EAAY,IACZE,EAAY,IACZE,EAAS,IACTuB,EAAW,IAQX/B,IAGD,OACC,eAACU,EAAA,EAAD,CAAOX,OAAQA,EAAQY,OAAQF,EAA/B,UACC,cAACG,EAAA,EAAD,CAAaD,OAAQF,EAArB,qBACA,mBAAGpE,UAAU,2BAAb,SAAyCyF,IACzC,mBAAGzF,UAAU,0BAAb,SAAwCkE,IACxC,cAACM,EAAA,EAAD,UACC,uBAAMpD,SAAU,SAAAG,GAAK,OA1CxB,SAAsBA,GACrBA,EAAMkD,iBACNa,EACEC,WAAW,CAACzB,WAAUE,aACtBU,MAAK,SAAAxF,GACLwG,EAAW,2BACXC,YAAW,kBAAMd,OAAOjG,SAASsG,QAAQ,OAPZ,QAS7BC,OAAM,SAAAjB,GACuB,MAA1BA,EAAMhF,SAAS0G,OACjBzB,EAAS,2BAEwB,MAA1BD,EAAMhF,SAAS0G,QACtBzB,EAAS,qDA6Be0B,CAAatE,IAAtC,UACC,uBAAO8D,QAAQ,WAAf,sBACA,uBACCrF,UAAU,eACVsB,SAAU,SAAAC,GAAK,OAAIwC,EAAYxC,EAAMC,OAAOH,QAC5CJ,KAAK,OACLI,MAAOyC,EACPrC,YAAY,aACb,uBACA,uBAAO4D,QAAQ,WAAf,sBACA,uBACCrF,UAAU,eACVsB,SAAU,SAAAC,GAAK,OAAI0C,EAAY1C,EAAMC,OAAOH,QAC5CJ,KAAK,WACLI,MAAO2C,EACPvC,YAAY,aACb,uBACA,qBAAKzB,UAAU,gCAAf,SACC,wBAAQA,UAAU,0BAA0BiB,KAAK,SAAjD,+BCrES,SAAS6E,EAAT,GAA6C,IAA5B1F,EAA2B,EAA3BA,KAAM2F,EAAqB,EAArBA,UAAWnC,EAAU,EAAVA,QAAU,EACtBtD,oBAAS,GADa,mBACnD0F,EADmD,KACtCC,EADsC,OAEpB3F,oBAAS,GAFW,mBAEnD4F,EAFmD,KAErCC,EAFqC,KAO1D,SAASC,IACRzB,QAAQC,IAAI,qBACZqB,GAAcD,GAMf,SAASK,IACR1B,QAAQC,IAAI,sBACZuB,GAAeD,GA+ChB,OACC,sBAAKlG,UAAU,8BAAf,UACC,sBAAKA,UAAU,YAAf,UACC,qBAAIA,UAAU,MAAd,UACC,oBAAIA,UAAU,WAAd,SACC,mBAAGC,KAAK,IAAID,UAAU,0BAAtB,sBAED,oBAAIA,UAAU,WAAd,SACC,mBAAGC,KAAK,aAAaD,UAAU,6BAA/B,4BAGF,qBAAIA,UAAU,MAAd,UACC,oBAAIA,UAAU,gBAAd,SA1BS,OAATI,QAA0BU,IAATV,EAElB,yBAAQJ,UAAU,gCAAgCgB,QAAS,kBAAMoF,KAAjE,UACE,sBAAMpG,UAAU,wBADlB,YAOA,sBAAMA,UAAU,aAAhB,SAA8BI,EAAK0D,aAoBlC,oBAAI9D,UAAU,WAAd,SAvDS,OAATI,QAA0BU,IAATV,EAElB,yBAAQJ,UAAU,gCAAgCgB,QAAS,kBAAMqF,KAAjE,UACE,sBAAMrG,UAAU,6BADlB,cAOA,wBAAQA,UAAU,gCAAgCgB,QAAS,kBAS7D+E,SACAlB,OAAOjG,SAASsG,QAAQ,MAVtB,6BAmDD,cAACzB,EAAD,CACCC,OAAQsC,EACRrC,YAAayC,EACbxC,QAASA,IAEV,cAAC4B,EAAD,CACC9B,OAAQwC,EACRvC,YAAa0C,O,YClGF,SAASC,EAAT,GAAyC,IAArBlG,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,YAUxC,IAAMoG,EAAgBnG,EAAOA,EAAKS,UAAUoC,KAAI,SAACrE,EAAUsE,GAC1D,OACC,qBAAelD,UAAU,sBAAzB,SACC,yBAAQA,UAAU,wBAAwBgB,QAAS,kBARtD,SAAoBpC,GACnBuB,EAAYvB,GACZiG,OAAOjG,SAAS4H,OAAO,KAMoCC,CAAW7H,IAApE,UACEA,EAASK,KADX,KACmBL,EAASI,YAFnBkE,MAMP,KAEL,OACC,qCACA,cAACG,EAAA,EAAD,UACC,gDAED,sBAAKrD,UAAU,YAAf,UACC,oBAAIA,UAAU,6BAAd,uBACA,oBAAIkB,MAAO,CAACgB,gBAAiB,SAAUlC,UAAU,QAChDuG,QCtBW,SAASG,IAAO,IAAD,EACJpG,mBAAS,IADL,mBACrB8C,EADqB,KACfuD,EADe,OAEIrG,mBAAS,IAFb,mBAEXH,GAFW,aAGJG,mBAAS,MAHL,mBAGrBF,EAHqB,KAGfwD,EAHe,KAItBgD,EAAU,gBAUhB,IAAMC,EAAa,WAuCnB,SAASC,EAAsBC,GAC7B5G,EAAY4G,GACZlC,OAAOC,aAAaC,QAAQ8B,EAAY7B,KAAKC,UAAU8B,IACvDvH,EACGC,OAAOsH,GACPrC,MAAK,SAAAvF,GAAI,OAAIwH,EAAQxH,MACrBgG,OAAM,SAAAjB,GAAK,OAAIS,QAAQT,MAAM,kBAAmBA,MA6BrD,OA7DAlC,qBARA,WACE,IAAMgF,EAAkBnC,OAAOC,aAAamC,QAAQL,GACpD,GAAGI,EAAiB,CAClB,IAAME,EAAmBlC,KAAKmC,MAAMH,GACpCpD,EAAQsD,GACR1H,EAAWE,SAASwH,EAAiBvI,UAGjB,IAkCxBqD,qBA7BA,WAEE,IAAMoF,EAAiBvC,OAAOC,aAAamC,QAAQJ,GAC/CO,EAEFN,EAAsB9B,KAAKmC,MAAMC,IAIjCvH,EACGC,cACA4E,MAAK,SAAAqC,GAAW,OAAID,EAAsBC,QAkBrB,IA4B1B,eAAC,IAAD,WACE,cAACjB,EAAD,CACE1F,KAAMA,EACN2F,UAnFN,WACEnC,EAAQ,MACRiB,OAAOC,aAAauC,SAkFhBzD,QA9BN,SAA0BxD,GACxBwD,EAAQxD,GACRZ,EAAWE,SAASU,EAAKzB,UA8BvB,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2I,KAAK,aAAZ,SACE,cAAChB,EAAD,CACElG,KAAMA,EACND,YAAa2G,MAGjB,cAAC,IAAD,CAAOQ,KAAK,IAAZ,SACE,cAACnE,EAAD,CACIC,KAAMA,EACNjD,YAAa2G,EACb1G,KAAMA,EACNC,YAlCZ,SAAwB0G,GACtBvH,EACGI,OAAOmH,GACPrC,MAAK,SAAAxF,GACJ,IAAMqI,EAAenH,EAAKS,UAAU2G,OAAOT,GACrCU,EAAO,2BACRrH,GADQ,IAEXS,UAAW0G,IAEb1C,OAAOC,aAAaC,QAAQ6B,EAAS5B,KAAKC,UAAUwC,IACpD7D,EAAQ6D,MAETtC,OAAM,SAAAjB,GAAK,OAAIS,QAAQC,IAAI,yCA0B5B,cAAC7E,EAAD,O,YCpHN2H,IAASC,OACL,cAACjB,EAAD,IACFkB,SAASC,eAAe,W","file":"static/js/main.1b69c93d.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = `/api/info`\r\nconst addDashboardUrl = '/api/users/location'\r\n\r\nlet token = null\r\n\r\n/**\r\n\tSets the token to newToken.\r\n*/\r\nfunction setToken(newToken) {\r\n\ttoken = `bearer ${newToken}`\r\n}\r\n\r\n/**\r\n\tGets the AQI data corresponding to location.\r\n\t@param {Object} location \r\n\tThe location to get the AQI data from.\r\n*/\r\nasync function getAQI(location) {\r\n\tconst response = await axios.get(`${baseUrl}/${location.country}/${location.city}`)\r\n\treturn response.data\r\n}\r\n\r\n/**\r\n\tAdds the new location to the user's profile.\r\n\t@param location\r\n\tThe location to add into the user's profile.\r\n*/\r\nasync function create(location) {\r\n\tconst config = {\r\n\t\theaders: {Authorization: token}\r\n\t}\r\n\tconst response = await axios.post(addDashboardUrl, location, config)\r\n\treturn response\r\n}\r\n\r\nconst aqiService = {\r\n\tgetAQI,\r\n\tsetToken,\r\n\tcreate\r\n}\r\n\r\nexport default aqiService","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/location'\r\n\r\n/**\r\n\tGets the user's location based on their IP.\r\n*/\r\nasync function getLocation() {\r\n\tconst response = await axios.get(baseUrl)\r\n    return response.data\r\n}\r\n\r\nconst locatorService = {getLocation}\r\n\r\nexport default locatorService","import React from 'react'\r\n\r\n/**\r\n\tFooter: The footer component of the AQInfo website. The color is transparent and contains attributions,\r\n\tas well as links (with more to be potentially added).\r\n\t\r\n*/\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"container py-5 transparent\">\r\n\t\t\t<h2 className=\"text-center text-white\">Information Provided by the World Air Quality Index</h2>\r\n\t\t\t<h3 className=\"m-4 text-center text-white\">\r\n\t\t\t\tWebsite made by\r\n\t\t\t\t<a href=\"https://github.com/rohit-px2\" className=\"text-decoration-none\">\r\n\t\t\t\t\t  {' Rohit Pradhan'}\r\n\t\t\t\t</a>\r\n\t\t\t</h3>\r\n\t\t</footer>\r\n\t)\r\n}","import React, {useState} from 'react'\r\nimport {Jumbotron} from 'reactstrap'\r\nimport aqiService from '../services/aqi'\r\n\r\nexport default function JumboLocationAndInput({city, country, setLocation, user, addLocation}) {\r\n\tconst [inputCity, setInputCity] = useState('')\r\n\tconst [inputCountry, setInputCountry] = useState('')\r\n\r\n\t/**\r\n\t\tUpdates the location.\r\n\t*/\r\n\tfunction handleSubmit() {\r\n\t\tsetLocation({\r\n\t\t\tcity: inputCity,\r\n\t\t\tcountry: inputCountry\r\n\t\t})\r\n\t}\r\n\tconst titleStyle = {\r\n\t\tfontSize: \"4rem\",\r\n\t}\r\n\r\n\t/**\r\n\t\tAppends the current location to the user's profile.\r\n\t*/\r\n\tfunction appendLocation() {\r\n\t\tconst location = {city, country}\r\n\t\taddLocation(location)\r\n\t}\r\n\r\n\t/**\r\n\t\tReturns true if the current city has not been added to the user's dashboard.\r\n\t*/\r\n\tfunction cityNotAdded() {\r\n\t\tif (user) {\r\n\t\t\tif (!user.locations) return false\r\n\t\t\telse {\r\n\t\t\t\tconst notAdded = user.locations.find(location => location.city === city && location.country === country) === undefined;\r\n\t\t\t\treturn notAdded\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\t/**\r\n\t\tAdds a \"add to dashboard\" button if the current city has not been added to the user's dashboard.\r\n\t*/\r\n\tfunction appendLocationButton() {\r\n\t\tif (user && cityNotAdded()) {\r\n\t\t\treturn (\r\n\t\t\t\t<button className=\"btn btn-secondary mr-auto\" onClick={appendLocation} type=\"button\">\r\n\t\t\t\t\tAdd to Dashboard\r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Jumbotron className=\"p-5 m-0 transparent text-white\">\r\n\t\t\t{appendLocationButton()}\r\n\t\t\t<div className=\"row row-header justify-content-center\">\r\n\t\t\t\t<div className=\"col-12 mr-5\">\r\n\t\t\t\t\t<h1 style={titleStyle} className=\"text-center\">{city}, {country}</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<form onSubmit={handleSubmit} className=\"mt-2\">\r\n\t\t\t\t\t<div className=\"row mr-5\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\tvalue={inputCity} \r\n\t\t\t\t\t\t\t\tonChange={event => setInputCity(event.target.value)} \r\n\t\t\t\t\t\t\t\tplaceholder=\"City...\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control mr-2\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\tvalue={inputCountry} \r\n\t\t\t\t\t\t\t\tonChange={event => setInputCountry(event.target.value)} \r\n\t\t\t\t\t\t\t\tplaceholder=\"Country...\"\r\n\t\t\t\t\t\t\t\tclassName=\" form-control ml-2\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row justify-content-center mr-5 mt-3\">\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</Jumbotron>\r\n\t)\r\n}","import React, {useEffect, useState} from 'react'\r\nimport { Jumbotron, Card, CardBody } from 'reactstrap'\r\nconst healthMessages = {\r\n\t\"Safe\": \"The air quality is very good. Air pollution poses very little to no risk to anyone.\",\r\n\t\"Moderately Safe\": \"The air quality is moderately safe. Active children and adults, and people with respiratory disease, such as asthma, should limit prolonged outdoor exertion.\",\r\n\t\"Moderately Unhealthy\": \"Active children and adults, and people with respiratory disease, such as asthma, should limit prolonged outdoor exertion.\",\r\n\t\"Unhealthy\": \"Active children and adults, and people with respiratory disease, such as asthma, should avoid prolonged outdoor exertion; everyone else, especially children, should limit prolonged outdoor exertion\",\r\n\t\"Very Unhealthy\": \"Active children and adults, and people with respiratory disease, such as asthma, should avoid all outdoor exertion; everyone else, especially children, should limit outdoor exertion.\",\r\n\t\"Hazardous\": \"Everyone should avoid all outdoor exertion.\" \r\n}\r\n\r\nconst Colors = {\r\n\tgreen: \"#43a047\",\r\n\tyellow: \"#fdd835\",\r\n\torange: \"#f4511e\",\r\n\tred: \"#e53935\",\r\n\tviolet: \"#5e35b1\",\r\n\t\"mahogany\": \"#C04000\"\r\n}\r\n\r\nconst healthColor = {\r\n\t\"Safe\": Colors.green,\r\n\t\"Moderately Safe\": Colors.yellow,\r\n\t\"Moderately Unhealthy\": Colors.orange,\r\n\t\"Unhealthy\": Colors.red,\r\n\t\"Very Unhealthy\": Colors.violet,\r\n\t\"Hazardous\": Colors.mahogany // mahogany\r\n}\r\n\r\n/**\r\n\tA hero-style component that displays the Air Quality Index of a location, gives a concise\r\n\tdefinition of the safety of the location, and an advisory.\r\n\t@param aqi\r\n\tThe Air Quality Index of the location.\r\n*/\r\nexport default function AQIIndicator({aqi}) {\r\n\tconst [health, setHealth] = useState('')\r\n\r\n\t/**\r\n\t\tFinds the \"health value\" (Safe, Unsafe, etc.) based on the Air Quality Index.\r\n\t*/\r\n\tfunction findHealth() {\r\n\t\tif(aqi === null) return;\r\n\t\telse if(aqi <= 50) setHealth(\"Safe\");\r\n\t\telse if(aqi > 50 && aqi <= 100) setHealth(\"Moderately Safe\");\r\n\t\telse if(aqi > 100 && aqi <= 150) setHealth(\"Moderately Unhealthy\");\r\n\t\telse if(aqi > 150 && aqi <= 200) setHealth(\"Unhealthy\");\r\n\t\telse if(aqi > 200 && aqi <= 300) setHealth(\"Very Unhealthy\")\r\n\t\telse if(aqi > 300) setHealth(\"Hazardous\");\r\n\t}\r\n\tuseEffect(findHealth, [aqi])\r\n\r\n\t/**\r\n\t\tReturns the message which corresponds to the location's health.\r\n\t*/\r\n\tfunction getMessage() {\r\n\t\treturn healthMessages[health]\r\n\t}\r\n\r\n\tconst backgroundStyle = {\r\n\t\tbackdropFilter: \"blur(6px)\",\r\n\t}\r\n\r\n\tconst healthColorStyle = {\r\n\t\tbackgroundColor: healthColor[health]\r\n\t}\r\n\r\n\r\n\treturn(\r\n\t\t<Jumbotron style={backgroundStyle} className=\"text-white transparent\">\r\n\t\t\t<Card style={healthColorStyle} className=\"mr-auto p-3\">\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<h1 className=\"text-dark text-center\">AQI: {aqi}</h1>\r\n\t\t\t\t\t<h2 className=\"text-dark text-center\">{health}</h2>\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t\t<p className=\"h4 ml-auto p-3 text-center\">{getMessage()}</p>\r\n\t\t</Jumbotron>\r\n\t)\r\n}","import React from 'react'\r\n\r\n// A Stat is an Array of Objects consisting of the structure\r\n// {\r\n//\t\"key\": {v: Number}\t\r\n// }\r\n// where \"key\" can be any variable. Here, these stats are air quality stats such\r\n// as o3, pm2.5, pm10 concentration.\r\n\r\nconst abbreviationsMap = {\r\n\t\"co\": \"Carbon Monoxide\",\r\n\t\"o3\": \"Ozone\",\r\n\t\"so2\": \"Sulfur Dioxide\",\r\n\t\"no2\": \"Nitrogen Dioxide\",\r\n\t\"pm10\": <span>PM<sub>10</sub></span>,\r\n\t\"pm25\": <span>PM<sub>2.5</sub></span>,\r\n\t\"t\": \"Temperature\",\r\n\t\"w\": \"Wind Speed\",\r\n\t\"p\": \"Air Pressure\",\r\n\t\"h\": \"Humidity\"\r\n}\r\n\r\nconst ppm = \" ppm\"\r\nconst degC = <span><sup> o</sup>C</span>\r\nconst kmH = \" km/h\"\r\nconst hPa = \" hPa\"\r\nconst gCm3 = <span> g/cm<sup>3</sup></span>\r\n\r\nconst measurements = {\r\n\t\"co\": ppm,\r\n\t\"o3\": ppm,\r\n\t\"so2\": ppm,\r\n\t\"no2\": ppm,\r\n\t\"t\": degC,\r\n\t\"w\": kmH,\r\n\t\"p\": hPa,\r\n\t\"h\": gCm3\r\n}\r\n\r\n/**\r\n\tDisplays a Stat (defined above) in a block-style display, where the stat name is on the left\r\n\tand the number is on the right.\r\n\t@param stat\r\n\tThe stat to be shown.\r\n*/\r\nexport default function StatDisplay({stat}) {\r\n\tif (stat !== undefined && stat !== null) {\r\n\t\tconst accessKey = Object.keys(stat)[0]\r\n\t\tconst ppm = stat[accessKey].v // Number (parts per million)\r\n\t\treturn (\r\n\t\t\t<div className=\"d-flex text-white col-md-12 col-xs-6\">\r\n\t\t\t\t<h2 className=\"mr-auto p-5\">{abbreviationsMap[accessKey]}</h2>\r\n\t\t\t\t<h2 className=\"ml-auto p-5\">{ppm}{measurements[accessKey] ? measurements[accessKey] : ''}</h2>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\telse {\r\n\t\treturn null\r\n\t}\r\n}","import React from 'react'\r\nimport StatDisplay from './StatDisplay'\r\n\r\n/**\r\n\tThe StatsDisplay consists of multiple instances of StatDisplay.\r\n\t@param stats\r\n\tThe list of stats to be displayed.\r\n*/\r\nexport default function StatsDisplay({stats}) {\r\n\tif (stats === undefined || stats === null) {\r\n\t\treturn null\r\n\t}\r\n\tconst display = stats.map((stat, idx) => {\r\n\t\treturn <StatDisplay stat={stat} key={idx} />\r\n\t})\r\n\treturn display\r\n}","import React from 'react'\r\nimport JumboLocationAndInput from './JumboLocationAndInput'\r\nimport AQIIndicator from './AQIIndicator'\r\nimport StatsDisplay from './StatsDisplay'\r\nimport Helmet from 'react-helmet'\r\n\r\n/**\r\n\tThe main page of the application.\r\n\t@param info\r\n\tThe AQI information. Contains city & country data, as well as AQI statistics.\r\n\t@param setLocation\r\n\tA function to set and update the location being displayed to a new one.\r\n\t@param user\r\n\tUser information.\r\n\t@param addLocation\r\n\tA function to add a location to the user's dashboard.\r\n*/\r\nexport default function MainPage({info, setLocation, user, addLocation}) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>{`AQInfo: ${info.city}, ${info.country}`}</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<JumboLocationAndInput\r\n\t\t\t\t\tsetLocation={setLocation}\r\n\t\t\t\t\tcountry={info.country}\r\n\t\t\t\t\tcity={info.city}\r\n\t\t\t\t\tuser={user}\r\n\t\t\t\t\taddLocation={addLocation}\r\n\t\t\t\t/>\r\n\t\t\t\t<AQIIndicator aqi={info.aqi} />\r\n\t\t\t\t<StatsDisplay stats={info.stats} />\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\n/**\r\n\tLogs in the user.\r\n*/\r\nasync function login(credentials) {\r\n\tconst response = await axios.post(baseUrl, credentials)\r\n\treturn response\r\n}\r\n\r\nconst loginService = {login}\r\n\r\n\r\nexport default loginService","import React, {useState} from 'react'\r\nimport {Modal, ModalBody, ModalHeader} from 'reactstrap'\r\nimport loginService from '../services/login'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n/**\r\n\tThe login modal.\r\n\t@param {boolean} isOpen\r\n\tWhether the modal is open or not.\r\n\t@param {function} toggleModal\r\n\tFunction that toggles the modal on and off.\r\n\t@param {function} setUser\r\n\tFunction that updates the user.\r\n*/\r\nexport default function LoginModal({isOpen, toggleModal, setUser}) {\r\n\tlet history = useHistory()\r\n\tconst [username, setUsername] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [error, setError] = useState(null)\r\n\r\n\tfunction handleLogin(event) {\r\n\t\tevent.preventDefault()\r\n\t\tloginService\r\n\t\t\t.login({username, password})\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response.data)\r\n\t\t\t\twindow.localStorage.setItem('loggedAqiUser', JSON.stringify(response.data))\r\n\t\t\t\tsetUser(response.data)\r\n\t\t\t\twindow.location.replace(\"/\")\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tsetError(error.response.data.error)\r\n\t\t\t})\r\n\t}\r\n\tfunction clearState() {\r\n\t\tsetUsername('')\r\n\t\tsetPassword('')\r\n\t\tsetError(null)\r\n\t}\r\n\r\n\tfunction closeModal() {\r\n\t\tclearState()\r\n\t\ttoggleModal()\r\n\t\r\n\t}\r\n\treturn (\r\n\t\t<Modal isOpen={isOpen} toggle={closeModal}>\r\n\t\t\t<ModalHeader toggle={closeModal}>Login</ModalHeader>\r\n\t\t\t<p className=\"text-danger text-center\">{error ? error : ''}</p>\r\n\t\t\t<ModalBody>\r\n\t\t\t\t<form onSubmit={event => handleLogin(event)}>\r\n\t\t\t\t\t<label htmlFor=\"username\">Username</label>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\t\tonChange={event => setUsername(event.target.value)}\r\n\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\tvalue={username} \r\n\t\t\t\t\t\tplaceholder=\"Username\" />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<label htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\t\tonChange={event => setPassword(event.target.value)}\r\n\t\t\t\t\t\ttype=\"password\" \r\n\t\t\t\t\t\tvalue={password} \r\n\t\t\t\t\t\tplaceholder=\"Password\" />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<div className=\"d-flex justify-content-center\">\r\n\t\t\t\t\t\t<button className=\"btn btn-success rounded\" type=\"submit\">Login</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</ModalBody>\r\n\t\t</Modal>\r\n\t)\r\n}","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\n/**\r\n\tPosts a user with the new credentials. This can throw a 409 error (conflict).\r\n*/\r\nasync function createUser(credentials) {\r\n\tconst response = await axios.post(baseUrl, credentials)\r\n\treturn response\r\n}\r\n\r\nconst userService = { createUser }\r\n\r\nexport default userService","import React, {useState} from 'react'\r\nimport {Modal, ModalBody, ModalHeader} from 'reactstrap'\r\nimport { useHistory }from 'react-router-dom'\r\nimport userService from '../services/userCreation'\r\nimport * as App from '../App'\r\n\r\n/**\r\n\tA signup modal.\r\n\t@param isOpen\r\n\tWhether the modal is open or not.\r\n\t@param toggleModal\r\n\tA function to toggle the SignupModal on or off.\r\n\t@param createUser\r\n\tA function to create the user.\r\n*/\r\nexport default function SignupModal({isOpen, toggleModal, createUser}) {\r\n\tlet history = useHistory()\r\n\tconst [message, setMessage] = useState('')\r\n\tconst [username, setUsername] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [error, setError] = useState('')\r\n\tconst CLOSE_UPON_SUCCESS_TIME = 500\r\n\tfunction handleSignup(event) {\r\n\t\tevent.preventDefault()\r\n\t\tuserService\r\n\t\t\t.createUser({username, password})\r\n\t\t\t.then(response => {\r\n\t\t\t\tsetMessage(\"Successfully signed up!\")\r\n\t\t\t\tsetTimeout(() => window.location.replace(\"/\"), CLOSE_UPON_SUCCESS_TIME)\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tif(error.response.status === 409) {\r\n\t\t\t\t\tsetError(\"That username is taken.\")\r\n\t\t\t\t}\r\n\t\t\t\telse if(error.response.status === 500) {\r\n\t\t\t\t\tsetError(\"Unable to sign up right now. Please try later.\")\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t\tClears the state of the component. This is used when the user clicks out of the modal.\r\n\t*/\r\n\tfunction clearState() {\r\n\t\tsetUsername('')\r\n\t\tsetPassword('')\r\n\t\tsetError('')\r\n\t\tsetMessage('')\r\n\t}\r\n\r\n\t/**\r\n\t\tCloses the modal.\r\n\t*/\r\n\tfunction closeModal() {\r\n\t\tclearState()\r\n\t\ttoggleModal()\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<Modal isOpen={isOpen} toggle={closeModal}>\r\n\t\t\t<ModalHeader toggle={closeModal}>Sign Up</ModalHeader>\r\n\t\t\t<p className=\"text-success text-center\">{message}</p>\r\n\t\t\t<p className=\"text-danger text-center\">{error}</p>\r\n\t\t\t<ModalBody>\r\n\t\t\t\t<form onSubmit={event => handleSignup(event)}>\r\n\t\t\t\t\t<label htmlFor=\"username\">Username</label>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\t\tonChange={event => setUsername(event.target.value)}\r\n\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\tvalue={username} \r\n\t\t\t\t\t\tplaceholder=\"Username\" />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<label htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\t\tonChange={event => setPassword(event.target.value)}\r\n\t\t\t\t\t\ttype=\"password\" \r\n\t\t\t\t\t\tvalue={password} \r\n\t\t\t\t\t\tplaceholder=\"Password\" />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<div className=\"d-flex justify-content-center\">\r\n\t\t\t\t\t\t<button className=\"btn btn-success rounded\" type=\"submit\">Sign Up</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</ModalBody>\r\n\t\t</Modal>\r\n\t)\r\n}","import React, {useState} from 'react'\r\nimport LoginModal from './LoginModal'\r\nimport SignupModal from './SignupModal'\r\n\r\n/**\r\n\tThe site header.\r\n\t@param user\r\n\tThe user's information.\r\n\t@param clearUser\r\n\tA function to clear the user, which is used in the \"Log Out\" button.\r\n\t@param setUser\r\n\tA function to update the user (logging in)\r\n*/\r\nexport default function Header({user, clearUser, setUser}) {\r\n\tconst [isLoginOpen, setLoginOpen] = useState(false)\r\n\tconst [isSignupOpen, setSignupOpen] = useState(false)\r\n\r\n\t/**\r\n\t\tToggles the LoginModal on and off.\r\n\t*/\r\n\tfunction toggleLogin() {\r\n\t\tconsole.log(\"Toggling login...\")\r\n\t\tsetLoginOpen(!isLoginOpen)\r\n\t}\r\n\r\n\t/**\r\n\t\tToggles the SignupModal on and off.\r\n\t*/\r\n\tfunction toggleSignup() {\r\n\t\tconsole.log(\"Toggling signup...\")\r\n\t\tsetSignupOpen(!isSignupOpen)\r\n\t}\r\n\r\n\t/**\r\n\t\tDisplays a \"sign up\" button if there is no user logged in, otherwise shows a \"Log Out\" button.\r\n\t*/\r\n\tfunction signUpOrLogOut() {\r\n\t\tif(user === null || user === undefined) {\r\n\t\t\treturn (\r\n\t\t\t\t<button className=\"btn btn-outline-light rounded\" onClick={() => toggleSignup()}>\r\n\t\t\t\t\t\t<span className=\"fa fa-address-card fa-lg\" /> Sign Up\r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\t<button className=\"btn btn-outline-light rounded\" onClick={() => logOut()}>\r\n\t\t\t\t\tLog Out\r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\t/** Logs out the user. */\r\n\tfunction logOut() {\r\n\t\tclearUser()\r\n\t\twindow.location.replace(\"/\")\r\n\t}\r\n\r\n\t/**\r\n\t\tDisplays a \"log in\" button if the user is not logged in, otherwise shows the user's name.\r\n\t*/\r\n\tfunction logButton() {\r\n\t\tif(user === null || user === undefined) {\r\n\t\t\treturn (\r\n\t\t\t\t<button className=\"btn btn-outline-light rounded\" onClick={() => toggleLogin()}>\r\n\t\t\t\t\t\t<span className=\"fa fa-sign-in fa-lg\" /> Login\r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\t<span className=\"text-light\">{user.username}</span>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<nav className=\"navbar navbar-light bg-dark\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<ul className=\"nav\">\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<a href=\"/\" className=\"navbar-brand text-light\">AQInfo</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<a href=\"/dashboard\" className=\"nav-link active text-light\">Dashboard</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<ul className=\"nav\">\r\n\t\t\t\t\t<li className=\"nav-item px-2\">\r\n\t\t\t\t\t\t{logButton()}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t{signUpOrLogOut()}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<LoginModal\r\n\t\t\t\tisOpen={isLoginOpen}\r\n\t\t\t\ttoggleModal={toggleLogin}\r\n\t\t\t\tsetUser={setUser}\r\n\t\t\t/>\r\n\t\t\t<SignupModal\r\n\t\t\t\tisOpen={isSignupOpen}\r\n\t\t\t\ttoggleModal={toggleSignup}\r\n\t\t\t/>\r\n\t\t</nav>\r\n\t)\r\n}","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\n/**\r\n\tDashboard: Displays all locations the user added to their dashboard.\r\n*/\r\nexport default function Dashboard({user, setLocation}) {\r\n\r\n\t/**\r\n\t\tReturns the user to the main page, which displays the AQI data of location.\r\n\t*/\r\n\tfunction getAqiInfo(location) {\r\n\t\tsetLocation(location)\r\n\t\twindow.location.assign(\"/\")\r\n\t}\r\n\r\n\tconst locationCards = user ? user.locations.map((location, idx) => {\r\n\t\treturn (\r\n\t\t\t<div key={idx} className=\"col-12 col-md-6 m-3\">\r\n\t\t\t\t<button className=\"btn btn-outline-light\" onClick={() => getAqiInfo(location)}>\r\n\t\t\t\t\t{location.city}, {location.country}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}) : null\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t<Helmet>\r\n\t\t\t<title>{`Dashboard`}</title>\r\n\t\t</Helmet>\r\n\t\t<div className=\"container\">\r\n\t\t\t<h2 className=\"text-center text-white p-2\">Dashboard</h2>\r\n\t\t\t<hr style={{backgroundColor: \"white\"}} className=\"m-2\"/>\r\n\t\t\t{locationCards}\r\n\t\t</div>\r\n\t\t</>\r\n\t)\r\n}","import React, {useState, useEffect} from 'react'\nimport aqiService from './services/aqi'\nimport locatorService from './services/locator'\nimport Footer from './components/Footer'\nimport MainPage from './components/MainPage'\nimport Header from './components/Header'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport Dashboard from './components/Dashboard'\n\n/**\n  The main app. Contains most of the state and events for the application.\n*/\nexport default function App() {\n  const [info, setInfo] = useState({})\n  const [location, setLocation] = useState({})\n  const [user, setUser] = useState(null)\n  const userKey = 'loggedAqiUser'\n\n  /**\n    Removes traces of the user from the browser.\n  */\n  function clearUser() {\n    setUser(null)\n    window.localStorage.clear()\n  }\n\n  const locatorKey = 'location'\n\n  /**\n    Retrieves stored information about the user from localstorage (if user was stored).\n  */\n  function retrieveUser() {\n    const loggedInUserStr = window.localStorage.getItem(userKey)\n    if(loggedInUserStr) {\n      const loggedInUserJSON = JSON.parse(loggedInUserStr)\n      setUser(loggedInUserJSON)\n      aqiService.setToken(loggedInUserJSON.token)\n    }\n  }\n  useEffect(retrieveUser, [])\n\n  /**\n    Retrieves location from localstorage, and geolocates using IP if their location is not stored.\n  */\n  function retrieveLocation() {\n    // Get location from localstorage, if it's not there, use geolocation.\n    const storedLocation = window.localStorage.getItem(locatorKey)\n    if (storedLocation) {\n      // stored as a string, we need the object.\n      setLocationAndGetInfo(JSON.parse(storedLocation))\n    }\n    else {\n      // geolocate the user and get their location, then do the same thing.\n      locatorService\n        .getLocation()\n        .then(newLocation => setLocationAndGetInfo(newLocation))\n    }\n  }\n  \n  /**\n    Sets the location to newLocation and retrieves the info corresponding to newLocation before\n    updating the state of App with the new information.\n    @param newLocation\n    The new location.\n  */\n  function setLocationAndGetInfo(newLocation) {\n    setLocation(newLocation)\n    window.localStorage.setItem(locatorKey, JSON.stringify(newLocation))\n    aqiService\n      .getAQI(newLocation)\n      .then(data => setInfo(data))\n      .catch(error => console.error(\"File not found:\", error))\n  }\n  useEffect(retrieveLocation, [])\n\n  function setUserAndUpdate(user) {\n    setUser(user)\n    aqiService.setToken(user.token)\n  }\n\n  /**\n    Adds newLocation to the user's list of locations to be displayed on the dashboard.\n    @param newLocation\n    The new location to be added.\n  */\n  function addToDashboard(newLocation) {\n    aqiService\n      .create(newLocation)\n      .then(response => {\n        const newLocations = user.locations.concat(newLocation)\n        const newUser = {\n          ...user,\n          locations: newLocations\n        }\n        window.localStorage.setItem(userKey, JSON.stringify(newUser))\n        setUser(newUser)\n      })\n      .catch(error => console.log(\"Could not add to dashboard\"))\n  }\n\n  return(\n    <Router>\n      <Header \n        user={user}\n        clearUser={clearUser}\n        setUser={setUserAndUpdate}\n       />\n      <Switch>\n        <Route path=\"/dashboard\">\n          <Dashboard\n            user={user}\n            setLocation={setLocationAndGetInfo}\n          />\n        </Route>\n        <Route path=\"/\">\n          <MainPage \n              info={info} \n              setLocation={setLocationAndGetInfo}\n              user={user}\n              addLocation={addToDashboard}\n          />\n        </Route>\n      </Switch>\n      <Footer />\n    </Router>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}