{"version":3,"sources":["services/aqi.js","services/locator.js","components/Footer.js","components/JumboLocationAndInput.js","components/AQIIndicator.js","components/StatDisplay.js","components/StatsDisplay.js","components/MainPage.js","services/login.js","components/LoginModal.js","services/userCreation.js","components/SignupModal.js","components/Header.js","components/Dashboard.js","App.js","index.js"],"names":["baseUrl","addDashboardUrl","location","a","axios","get","country","city","response","data","post","aqiService","getAQI","create","locatorService","getLocation","Footer","className","href","JumboLocationAndInput","setLocation","user","addLocation","useState","inputCity","setInputCity","inputCountry","setInputCountry","appendLocation","Jumbotron","locations","undefined","find","onClick","type","style","fontSize","onSubmit","value","onChange","event","target","placeholder","healthMessages","healthColor","AQIIndicator","aqi","health","setHealth","useEffect","healthColorStyle","backgroundColor","backdropFilter","Card","CardBody","abbreviationsMap","ppm","measurements","StatDisplay","stat","accessKey","Object","keys","v","StatsDisplay","stats","map","idx","MainPage","info","Helmet","credentials","loginService","login","LoginModal","isOpen","toggleModal","setUser","username","setUsername","password","setPassword","error","setError","closeModal","Modal","toggle","ModalHeader","ModalBody","preventDefault","then","console","log","window","localStorage","setItem","JSON","stringify","replace","catch","setTimeout","handleLogin","htmlFor","userService","createUser","SignupModal","useHistory","message","setMessage","status","handleSignup","Header","clearUser","isLoginOpen","setLoginOpen","isSignupOpen","setSignupOpen","toggleLogin","toggleSignup","Dashboard","locationCards","assign","getAqiInfo","App","setInfo","userKey","locatorKey","setLocationAndGetInfo","newLocation","loggedInUserStr","getItem","loggedInUserJSON","parse","storedLocation","clear","path","_response","newLocations","concat","newUser","_error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37206857.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = `/api/info`\r\nconst addDashboardUrl = '/api/users/location'\r\n\r\n//let token = null\r\n\r\n/**\r\n\tSets the token to newToken.\r\n  NOTE: Not used (use httpOnly cookies for tokens)\r\n*/\r\n//function setToken(newToken) {\r\n  //token = `bearer ${newToken}`\r\n//}\r\n\r\n/**\r\n\tGets the AQI data corresponding to location.\r\n\t@param {Object} location \r\n\tThe location to get the AQI data from.\r\n*/\r\nasync function getAQI(location) {\r\n  const response = await axios.get(`${baseUrl}/${location.country}/${location.city}`)\r\n  return response.data\r\n}\r\n\r\n/**\r\n\tAdds the new location to the user's profile.\r\n\t@param location\r\n\tThe location to add into the user's profile.\r\n*/\r\nasync function create(location) {\r\n  //const config = {\r\n    //headers: {Authorization: token}\r\n  //}\r\n  const response = await axios.post(addDashboardUrl, location)\r\n  return response\r\n}\r\n\r\nconst aqiService = {\r\n  getAQI,\r\n  //setToken,\r\n  create\r\n}\r\n\r\nexport default aqiService\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/location'\r\n\r\n/**\r\n\tGets the user's location based on their IP.\r\n*/\r\nasync function getLocation() {\r\n\tconst response = await axios.get(baseUrl)\r\n\treturn response.data\r\n}\r\n\r\nconst locatorService = {getLocation}\r\n\r\nexport default locatorService","import React from 'react'\r\n\r\n/**\r\n\tFooter: The footer component of the AQInfo website. The color is transparent and contains attributions,\r\n\tas well as links (with more to be potentially added).\r\n\t\r\n*/\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"container py-5 transparent\">\r\n\t\t\t<h2 className=\"text-center text-white\">Information Provided by the World Air Quality Index</h2>\r\n\t\t\t<h3 className=\"m-4 text-center text-white\">\r\n\t\t\t\tWebsite made by\r\n\t\t\t\t<a href=\"https://github.com/rohit-px2\" className=\"text-decoration-none\">\r\n\t\t\t\t\t  {' Rohit Pradhan'}\r\n\t\t\t\t</a>\r\n\t\t\t</h3>\r\n\t\t</footer>\r\n\t)\r\n}","import React, {useState} from 'react'\r\nimport {Jumbotron} from 'reactstrap'\r\n\r\nexport default function JumboLocationAndInput({city, country, setLocation, user, addLocation}) {\r\n  const [inputCity, setInputCity] = useState('')\r\n  const [inputCountry, setInputCountry] = useState('')\r\n\r\n  /**\r\n    Updates the location.\r\n  */\r\n  function handleSubmit() {\r\n    setLocation({\r\n      city: inputCity,\r\n      country: inputCountry\r\n    })\r\n  }\r\n  const titleStyle = {\r\n    fontSize: \"4rem\",\r\n  }\r\n\r\n  /**\r\n    Appends the current location to the user's profile.\r\n  */\r\n  function appendLocation() {\r\n    const location = {city, country}\r\n    addLocation(location)\r\n  }\r\n\r\n  /**\r\n    Returns true if the current city has not been added to the user's dashboard.\r\n  */\r\n  function cityNotAdded() {\r\n    if (user) {\r\n      if (!user.locations) return false\r\n      else {\r\n        const notAdded = user.locations.find(location => location.city === city && location.country === country) === undefined;\r\n        return notAdded\r\n      }\r\n    }\r\n    return false\r\n  }\r\n  /**\r\n    Adds a \"add to dashboard\" button if the current city has not been added to the user's dashboard.\r\n  */\r\n  function appendLocationButton() {\r\n    if (user && cityNotAdded()) {\r\n      return (\r\n        <button className=\"btn btn-secondary mr-auto\" onClick={appendLocation} type=\"button\">\r\n          Add to Dashboard\r\n        </button>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n\r\n\treturn (\r\n    <Jumbotron className=\"p-5 m-0 transparent text-white\">\r\n      {appendLocationButton()}\r\n      <div className=\"row row-header justify-content-center\">\r\n        <div className=\"col-12 mr-5\">\r\n          <h1 style={titleStyle} className=\"text-center\">{city}, {country}</h1>\r\n        </div>\r\n        <form onSubmit={handleSubmit} className=\"mt-2\">\r\n          <div className=\"row mr-5\">\r\n            <div className=\"col\">\r\n              <input \r\n                type=\"text\" \r\n                value={inputCity} \r\n                onChange={event => setInputCity(event.target.value)} \r\n                placeholder=\"City...\"\r\n                className=\"form-control mr-2\"\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <input \r\n                type=\"text\" \r\n                value={inputCountry} \r\n                onChange={event => setInputCountry(event.target.value)} \r\n                placeholder=\"Country...\"\r\n                className=\" form-control ml-2\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row justify-content-center mr-5 mt-3\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n          </div>\r\n        </form>\r\n        \r\n      </div>\r\n    </Jumbotron>\r\n  )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Jumbotron, Card, CardBody } from 'reactstrap'\r\nconst healthMessages = {\r\n\t\"Safe\": \"The air quality is very good. Air pollution poses very little to no risk to anyone.\",\r\n\t\"Moderately Safe\": \"The air quality is moderately safe. Active children and adults, and people with respiratory disease, such as asthma, should limit prolonged outdoor exertion.\",\r\n\t\"Moderately Unhealthy\": \"Active children and adults, and people with respiratory disease, such as asthma, should limit prolonged outdoor exertion.\",\r\n\t\"Unhealthy\": \"Active children and adults, and people with respiratory disease, such as asthma, should avoid prolonged outdoor exertion; everyone else, especially children, should limit prolonged outdoor exertion\",\r\n\t\"Very Unhealthy\": \"Active children and adults, and people with respiratory disease, such as asthma, should avoid all outdoor exertion; everyone else, especially children, should limit outdoor exertion.\",\r\n\t\"Hazardous\": \"Everyone should avoid all outdoor exertion.\" \r\n}\r\n\r\nconst Colors = {\r\n\tgreen: \"#43a047\",\r\n\tyellow: \"#fdd835\",\r\n\torange: \"#f4511e\",\r\n\tred: \"#e53935\",\r\n\tviolet: \"#5e35b1\",\r\n\t\"mahogany\": \"#C04000\"\r\n}\r\n\r\nconst healthColor = {\r\n\t\"Safe\": Colors.green,\r\n\t\"Moderately Safe\": Colors.yellow,\r\n\t\"Moderately Unhealthy\": Colors.orange,\r\n\t\"Unhealthy\": Colors.red,\r\n\t\"Very Unhealthy\": Colors.violet,\r\n\t\"Hazardous\": Colors.mahogany // mahogany\r\n}\r\n\r\n/**\r\n\tA hero-style component that displays the Air Quality Index of a location, gives a concise\r\n\tdefinition of the safety of the location, and an advisory.\r\n\t@param aqi\r\n\tThe Air Quality Index of the location.\r\n*/\r\nexport default function AQIIndicator({aqi}) {\r\n\tconst [health, setHealth] = useState('')\r\n\r\n\t/**\r\n\t\tFinds the \"health value\" (Safe, Unsafe, etc.) based on the Air Quality Index.\r\n\t*/\r\n\tfunction findHealth() {\r\n\t\tif(aqi === null) return;\r\n\t\telse if(aqi <= 50) setHealth(\"Safe\");\r\n\t\telse if(aqi > 50 && aqi <= 100) setHealth(\"Moderately Safe\");\r\n\t\telse if(aqi > 100 && aqi <= 150) setHealth(\"Moderately Unhealthy\");\r\n\t\telse if(aqi > 150 && aqi <= 200) setHealth(\"Unhealthy\");\r\n\t\telse if(aqi > 200 && aqi <= 300) setHealth(\"Very Unhealthy\")\r\n\t\telse if(aqi > 300) setHealth(\"Hazardous\");\r\n\t}\r\n\tuseEffect(findHealth, [aqi])\r\n\r\n\t/**\r\n\t\tReturns the message which corresponds to the location's health.\r\n\t*/\r\n\tfunction getMessage() {\r\n\t\treturn healthMessages[health]\r\n\t}\r\n\r\n\tconst backgroundStyle = {\r\n\t\tbackdropFilter: \"blur(6px)\",\r\n\t}\r\n\r\n\tconst healthColorStyle = {\r\n\t\tbackgroundColor: healthColor[health]\r\n\t}\r\n\r\n\r\n\treturn(\r\n\t\t<Jumbotron style={backgroundStyle} className=\"text-white transparent\">\r\n\t\t\t<Card style={healthColorStyle} className=\"mr-auto p-3\">\r\n\t\t\t\t<CardBody>\r\n\t\t\t\t\t<h1 className=\"text-dark text-center\">AQI: {aqi}</h1>\r\n\t\t\t\t\t<h2 className=\"text-dark text-center\">{health}</h2>\r\n\t\t\t\t</CardBody>\r\n\t\t\t</Card>\r\n\t\t\t<p className=\"h4 ml-auto p-3 text-center\">{getMessage()}</p>\r\n\t\t</Jumbotron>\r\n\t)\r\n}","import React from 'react'\r\n\r\n// A Stat is an Array of Objects consisting of the structure\r\n// {\r\n//\t\"key\": {v: Number}\t\r\n// }\r\n// where \"key\" can be any variable. Here, these stats are air quality stats such\r\n// as o3, pm2.5, pm10 concentration.\r\n\r\nconst abbreviationsMap = {\r\n\t\"co\": \"Carbon Monoxide\",\r\n\t\"o3\": \"Ozone\",\r\n\t\"so2\": \"Sulfur Dioxide\",\r\n\t\"no2\": \"Nitrogen Dioxide\",\r\n\t\"pm10\": <span>PM<sub>10</sub></span>,\r\n\t\"pm25\": <span>PM<sub>2.5</sub></span>,\r\n\t\"t\": \"Temperature\",\r\n\t\"w\": \"Wind Speed\",\r\n\t\"p\": \"Air Pressure\",\r\n\t\"h\": \"Humidity\"\r\n}\r\n\r\nconst ppm = \" ppm\"\r\nconst degC = <span><sup> o</sup>C</span>\r\nconst kmH = \" km/h\"\r\nconst hPa = \" hPa\"\r\nconst gCm3 = <span> g/cm<sup>3</sup></span>\r\n\r\nconst measurements = {\r\n\t\"co\": ppm,\r\n\t\"o3\": ppm,\r\n\t\"so2\": ppm,\r\n\t\"no2\": ppm,\r\n\t\"t\": degC,\r\n\t\"w\": kmH,\r\n\t\"p\": hPa,\r\n\t\"h\": gCm3\r\n}\r\n\r\n/**\r\n\tDisplays a Stat (defined above) in a block-style display, where the stat name is on the left\r\n\tand the number is on the right.\r\n\t@param stat\r\n\tThe stat to be shown.\r\n*/\r\nexport default function StatDisplay({stat}) {\r\n\tif (stat !== undefined && stat !== null) {\r\n\t\tconst accessKey = Object.keys(stat)[0]\r\n\t\tconst ppm = stat[accessKey].v // Number (parts per million)\r\n\t\treturn (\r\n\t\t\t<div className=\"d-flex text-white col-md-12 col-xs-6\">\r\n\t\t\t\t<h2 className=\"mr-auto p-5\">{abbreviationsMap[accessKey]}</h2>\r\n\t\t\t\t<h2 className=\"ml-auto p-5\">{ppm}{measurements[accessKey] ? measurements[accessKey] : ''}</h2>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\telse {\r\n\t\treturn null\r\n\t}\r\n}","import React from 'react'\r\nimport StatDisplay from './StatDisplay'\r\n\r\n/**\r\n\tThe StatsDisplay consists of multiple instances of StatDisplay.\r\n\t@param stats\r\n\tThe list of stats to be displayed.\r\n*/\r\nexport default function StatsDisplay({stats}) {\r\n\tif (stats === undefined || stats === null) {\r\n\t\treturn null\r\n\t}\r\n\tconst display = stats.map((stat, idx) => {\r\n\t\treturn <StatDisplay stat={stat} key={idx} />\r\n\t})\r\n\treturn display\r\n}","import React from 'react'\r\nimport JumboLocationAndInput from './JumboLocationAndInput'\r\nimport AQIIndicator from './AQIIndicator'\r\nimport StatsDisplay from './StatsDisplay'\r\nimport Helmet from 'react-helmet'\r\n\r\n/**\r\n\tThe main page of the application.\r\n\t@param info\r\n\tThe AQI information. Contains city & country data, as well as AQI statistics.\r\n\t@param setLocation\r\n\tA function to set and update the location being displayed to a new one.\r\n\t@param user\r\n\tUser information.\r\n\t@param addLocation\r\n\tA function to add a location to the user's dashboard.\r\n*/\r\nexport default function MainPage({info, setLocation, user, addLocation}) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>{`AQInfo: ${info.city}, ${info.country}`}</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<JumboLocationAndInput\r\n\t\t\t\t\tsetLocation={setLocation}\r\n\t\t\t\t\tcountry={info.country}\r\n\t\t\t\t\tcity={info.city}\r\n\t\t\t\t\tuser={user}\r\n\t\t\t\t\taddLocation={addLocation}\r\n\t\t\t\t/>\r\n\t\t\t\t<AQIIndicator aqi={info.aqi} />\r\n\t\t\t\t<StatsDisplay stats={info.stats} />\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n/**\r\n\tLogs in the user in with the given credentials. Returns 401 if\r\n\tthe user is not successfully authenticated.\r\n*/\r\nasync function login(credentials) {\r\n\tconst response = await axios.post(baseUrl, credentials)\r\n\treturn response\r\n}\r\n\r\nconst loginService = {login}\r\n\r\n\r\nexport default loginService\r\n","import React, {useState} from 'react'\r\nimport {Modal, ModalBody, ModalHeader} from 'reactstrap'\r\nimport loginService from '../services/login'\r\n\r\n/**\r\n\tThe login modal.\r\n\t@param isOpen\r\n\tWhether the modal is open or not.\r\n\t@param toggleModal\r\n\tFunction that toggles the modal on and off.\r\n\t@param setUser\r\n\tFunction that updates the user.\r\n*/\r\nexport default function LoginModal({isOpen, toggleModal, setUser}) {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [error, setError] = useState(null)\r\n\r\n  function handleLogin(event) {\r\n    event.preventDefault()\r\n    loginService\r\n      .login({username, password})\r\n      .then(response => {\r\n        console.log(response.data)\r\n        window.localStorage.setItem('loggedAqiUser', JSON.stringify(response.data))\r\n        setUser(response.data)\r\n        window.location.replace(\"/\")\r\n      })\r\n      .catch(error => {\r\n        setError(error.response.data.error)\r\n        setTimeout(() => {\r\n          setError(null)\r\n        }, 3000)\r\n      })\r\n  }\r\n\r\n  function clearState() {\r\n    setUsername('')\r\n    setPassword('')\r\n    setError(null)\r\n  }\r\n\r\n  function closeModal() {\r\n    clearState()\r\n    toggleModal()\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={closeModal}>\r\n      <ModalHeader toggle={closeModal}>Login</ModalHeader>\r\n      <p className=\"text-danger text-center\">{error ? error : ''}</p>\r\n      <ModalBody>\r\n        <form onSubmit={event => handleLogin(event)}>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input \r\n            className=\"form-control\" \r\n            onChange={event => setUsername(event.target.value)}\r\n            type=\"text\" \r\n            value={username} \r\n            placeholder=\"Username\" />\r\n          <br />\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input \r\n            className=\"form-control\" \r\n            onChange={event => setPassword(event.target.value)}\r\n            type=\"password\" \r\n            value={password} \r\n            placeholder=\"Password\" />\r\n          <br />\r\n          <div className=\"d-flex justify-content-center\">\r\n            <button className=\"btn btn-success rounded\" type=\"submit\">Login</button>\r\n          </div>\r\n        </form>\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\n/**\r\n\tPosts a user with the new credentials. This can throw a 409 error (conflict).\r\n*/\r\nasync function createUser(credentials) {\r\n\tconst response = await axios.post(baseUrl, credentials)\r\n\treturn response\r\n}\r\n\r\nconst userService = { createUser }\r\n\r\nexport default userService","import React, {useState} from 'react'\r\nimport {Modal, ModalBody, ModalHeader} from 'reactstrap'\r\nimport { useHistory }from 'react-router-dom'\r\nimport userService from '../services/userCreation'\r\nimport * as App from '../App'\r\n\r\n/**\r\n\tA signup modal.\r\n\t@param isOpen\r\n\tWhether the modal is open or not.\r\n\t@param toggleModal\r\n\tA function to toggle the SignupModal on or off.\r\n\t@param createUser\r\n\tA function to create the user.\r\n*/\r\nexport default function SignupModal({isOpen, toggleModal, createUser}) {\r\n\tlet history = useHistory()\r\n\tconst [message, setMessage] = useState('')\r\n\tconst [username, setUsername] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [error, setError] = useState('')\r\n\tconst CLOSE_UPON_SUCCESS_TIME = 500\r\n\tfunction handleSignup(event) {\r\n\t\tevent.preventDefault()\r\n\t\tuserService\r\n\t\t\t.createUser({username, password})\r\n\t\t\t.then(response => {\r\n\t\t\t\tsetMessage(\"Successfully signed up!\")\r\n\t\t\t\tsetTimeout(() => window.location.replace(\"/\"), CLOSE_UPON_SUCCESS_TIME)\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tif(error.response.status === 409) {\r\n\t\t\t\t\tsetError(\"That username is taken.\")\r\n\t\t\t\t}\r\n\t\t\t\telse if(error.response.status === 500) {\r\n\t\t\t\t\tsetError(\"Unable to sign up right now. Please try later.\")\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t\tClears the state of the component. This is used when the user clicks out of the modal.\r\n\t*/\r\n\tfunction clearState() {\r\n\t\tsetUsername('')\r\n\t\tsetPassword('')\r\n\t\tsetError('')\r\n\t\tsetMessage('')\r\n\t}\r\n\r\n\t/**\r\n\t\tCloses the modal.\r\n\t*/\r\n\tfunction closeModal() {\r\n\t\tclearState()\r\n\t\ttoggleModal()\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<Modal isOpen={isOpen} toggle={closeModal}>\r\n\t\t\t<ModalHeader toggle={closeModal}>Sign Up</ModalHeader>\r\n\t\t\t<p className=\"text-success text-center\">{message}</p>\r\n\t\t\t<p className=\"text-danger text-center\">{error}</p>\r\n\t\t\t<ModalBody>\r\n\t\t\t\t<form onSubmit={event => handleSignup(event)}>\r\n\t\t\t\t\t<label htmlFor=\"username\">Username</label>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\t\tonChange={event => setUsername(event.target.value)}\r\n\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\tvalue={username} \r\n\t\t\t\t\t\tplaceholder=\"Username\" />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<label htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tclassName=\"form-control\" \r\n\t\t\t\t\t\tonChange={event => setPassword(event.target.value)}\r\n\t\t\t\t\t\ttype=\"password\" \r\n\t\t\t\t\t\tvalue={password} \r\n\t\t\t\t\t\tplaceholder=\"Password\" />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<div className=\"d-flex justify-content-center\">\r\n\t\t\t\t\t\t<button className=\"btn btn-success rounded\" type=\"submit\">Sign Up</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</ModalBody>\r\n\t\t</Modal>\r\n\t)\r\n}","import React, {useState} from 'react'\r\nimport LoginModal from './LoginModal'\r\nimport SignupModal from './SignupModal'\r\n\r\n/**\r\n\tThe site header.\r\n\t@param user\r\n\tThe user's information.\r\n\t@param clearUser\r\n\tA function to clear the user, which is used in the \"Log Out\" button.\r\n\t@param setUser\r\n\tA function to update the user (logging in)\r\n*/\r\nexport default function Header({user, clearUser, setUser}) {\r\n  const [isLoginOpen, setLoginOpen] = useState(false)\r\n  const [isSignupOpen, setSignupOpen] = useState(false)\r\n\r\n  /**\r\n    Toggles the LoginModal on and off.\r\n  */\r\n  function toggleLogin() {\r\n    console.log(\"Toggling login...\")\r\n    setLoginOpen(!isLoginOpen)\r\n  }\r\n\r\n  /**\r\n    Toggles the SignupModal on and off.\r\n  */\r\n  function toggleSignup() {\r\n    console.log(\"Toggling signup...\")\r\n    setSignupOpen(!isSignupOpen)\r\n  }\r\n\r\n  /**\r\n    Displays a \"sign up\" button if there is no user logged in, otherwise shows a \"Log Out\" button.\r\n  */\r\n  function signUpOrLogOut() {\r\n    if(user === null || user === undefined) {\r\n      return (\r\n        <button className=\"btn btn-outline-light rounded\" onClick={() => toggleSignup()}>\r\n            <span className=\"fa fa-address-card fa-lg\" /> Sign Up\r\n        </button>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <button className=\"btn btn-outline-light rounded\" onClick={() => logOut()}>\r\n          Log Out\r\n        </button>\r\n      )\r\n    }\r\n  }\r\n\r\n  /** Logs out the user. */\r\n  function logOut() {\r\n    clearUser()\r\n    window.location.replace(\"/\")\r\n  }\r\n\r\n  /**\r\n    Displays a \"log in\" button if the user is not logged in, otherwise shows the user's name.\r\n  */\r\n  function logButton() {\r\n    if(user === null || user === undefined) {\r\n      return (\r\n        <button className=\"btn btn-outline-light rounded\" onClick={() => toggleLogin()}>\r\n            <span className=\"fa fa-sign-in fa-lg\" /> Login\r\n        </button>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <span className=\"text-light\">{user.username}</span>\r\n      )\r\n    }\r\n  }\r\n\r\n  return(\r\n    <nav className=\"navbar navbar-light bg-dark\">\r\n      <div className=\"container\">\r\n        <ul className=\"nav\">\r\n          <li className=\"nav-item\">\r\n            <a href=\"/\" className=\"navbar-brand text-light\">AQInfo</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a href=\"/dashboard\" className=\"nav-link active text-light\">Dashboard</a>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"nav\">\r\n          <li className=\"nav-item px-2\">\r\n            {logButton()}\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            {signUpOrLogOut()}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <LoginModal\r\n        isOpen={isLoginOpen}\r\n        toggleModal={toggleLogin}\r\n        setUser={setUser}\r\n      />\r\n      <SignupModal\r\n        isOpen={isSignupOpen}\r\n        toggleModal={toggleSignup}\r\n      />\r\n    </nav>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\n/**\r\n\tDashboard: Displays all locations the user added to their dashboard.\r\n*/\r\nexport default function Dashboard({user, setLocation}) {\r\n\r\n\t/**\r\n\t\tReturns the user to the main page, which displays the AQI data of location.\r\n\t*/\r\n\tfunction getAqiInfo(location) {\r\n\t\tsetLocation(location)\r\n\t\twindow.location.assign(\"/\")\r\n\t}\r\n\r\n\tconst locationCards = user ? user.locations.map((location, idx) => {\r\n\t\treturn (\r\n\t\t\t<div key={idx} className=\"col-12 col-md-6 m-3\">\r\n\t\t\t\t<button className=\"btn btn-outline-light\" onClick={() => getAqiInfo(location)}>\r\n\t\t\t\t\t{location.city}, {location.country}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}) : null\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t<Helmet>\r\n\t\t\t<title>{`Dashboard`}</title>\r\n\t\t</Helmet>\r\n\t\t<div className=\"container\">\r\n\t\t\t<h2 className=\"text-center text-white p-2\">Dashboard</h2>\r\n\t\t\t<hr style={{backgroundColor: \"white\"}} className=\"m-2\"/>\r\n\t\t\t{user === null ? <p className=\"text-white h3 text-center\">Please login to view your dashboard.</p> : null}\r\n\t\t\t{locationCards}\r\n\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React, {useState, useEffect} from 'react'\nimport aqiService from './services/aqi'\nimport locatorService from './services/locator'\nimport Footer from './components/Footer'\nimport MainPage from './components/MainPage'\nimport Header from './components/Header'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport Dashboard from './components/Dashboard'\n/**\n  The main app. Contains most of the state and events for the application.\n*/\nexport default function App() {\n  const [info, setInfo] = useState({})\n  const [location, setLocation] = useState({})\n  const [user, setUser] = useState(null)\n  const userKey = 'loggedAqiUser'\n  /**\n    Removes traces of the user from the browser.\n  */\n  function clearUser() {\n    setUser(null)\n    window.localStorage.clear()\n  }\n  const locatorKey = 'location'\n  /**\n    Retrieves stored information about the user from localstorage (if user was stored).\n  */\n  function retrieveUser() {\n    const loggedInUserStr = window.localStorage.getItem(userKey)\n    if(loggedInUserStr) {\n      const loggedInUserJSON = JSON.parse(loggedInUserStr)\n      setUser(loggedInUserJSON)\n      //aqiService.setToken(loggedInUserJSON.token)\n    }\n  }\n  useEffect(retrieveUser, [])\n\n  /**\n    Retrieves location from localstorage, and geolocates using IP if their location is not stored.\n  */\n  function retrieveLocation() {\n    // Get location from localstorage, if it's not there, use geolocation.\n    const storedLocation = window.localStorage.getItem(locatorKey)\n    if (storedLocation) {\n      // stored as a string, we need the object.\n      setLocationAndGetInfo(JSON.parse(storedLocation))\n    }\n    else {\n      // geolocate the user and get their location, then do the same thing.\n      locatorService\n        .getLocation()\n        .then(newLocation => setLocationAndGetInfo(newLocation))\n    }\n  }\n  \n  /**\n    * Sets the location to newLocation and retrieves the info corresponding to newLocation before\n    * updating the state of App with the new information.\n    * @param newLocation The new location.\n  */\n  function setLocationAndGetInfo(newLocation) {\n    setLocation(newLocation)\n    window.localStorage.setItem(locatorKey, JSON.stringify(newLocation))\n    aqiService\n      .getAQI(newLocation)\n      .then(data => setInfo(data))\n      .catch(error => console.error(\"File not found:\", error))\n  }\n\n  useEffect(retrieveLocation, [])\n\n  function setUserAndUpdate(user) {\n    setUser(user)\n    //aqiService.setToken(user.token)\n  }\n\n  /**\n    Adds newLocation to the user's list of locations to be displayed on the dashboard.\n    @param {{city: string, country: string}} newLocation\n    The new location to be added.\n  */\n  function addToDashboard(newLocation){\n    aqiService\n      .create(newLocation)\n      .then(_response => {\n        const newLocations = user.locations.concat(newLocation)\n        const newUser = {\n          ...user,\n          locations: newLocations\n        }\n        window.localStorage.setItem(userKey, JSON.stringify(newUser))\n        setUser(newUser)\n      })\n      .catch(_error => console.log(\"Could not add to dashboard\"))\n  }\n\n  return(\n    <Router>\n      <Header\n        user={user}\n        clearUser={clearUser}\n        setUser={setUserAndUpdate}\n       />\n      <Switch>\n        <Route path=\"/dashboard\">\n          <Dashboard\n            user={user}\n            setLocation={setLocationAndGetInfo}\n          />\n        </Route>\n        <Route path=\"/\">\n          <MainPage \n              info={info} \n              setLocation={setLocationAndGetInfo}\n              user={user}\n              addLocation={addToDashboard}\n          />\n        </Route>\n      </Switch>\n      <Footer />\n    </Router>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}